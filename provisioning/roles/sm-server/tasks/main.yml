---

- name: load secrets into playbook
  include_vars: secrets.yml

- name: create sm installdir
  file: path={{ install_filepath }} state=directory mode=0755 owner={{ install_user }}
  tags: prepare
  become: yes

- name: copy ITSM Archive from S3
  aws_s3:
    bucket: "{{ s3_bucket }}"
    object: "/{{ s3_bin_path }}/{{ sm_bin }}"
    # version: 48c9ee5131af7a716edc22df9772aa6f
    dest: "{{ install_filepath }}/{{ sm_bin }}"
    mode: get

- name: Unarchive ITSM Archive
  unarchive:
    src: "{{ install_filepath }}/{{ sm_bin }}"
    dest: "{{ install_filepath }}"
    mode: 0755
    owner: "{{ install_user }}"
    remote_src: "{{ remote_src }}"

  tags: prepare
  become: yes

- name: chmod Installation Files
  file:
    path: "{{ install_bin_path }}/{{ install_bin }}"
    mode: 0777
  tags: prepare
  become: yes

- name: create target itsm directory
  file:
    path: "{{ sm_install_dir }}"
    state: directory
    owner: "{{ install_user }}"
    mode: 0755
  tags: prepare
  become: yes

- name: install itsm
  expect:
    command: "{{ install_bin_path }}/{{ install_bin }} -i console"
    responses:
      'PRESS \<ENTER\> TO CONTINUE:' : ''
      'DO YOU ACCEPT THE TERMS OF THIS LICENSE AGREEMENT?' : 'Y'
      'ENTER AN ABSOLUTE PATH, OR PRESS \<ENTER\> TO ACCEPT THE DEFAULT' : "{{ sm_install_server_dir }}"
      'IS THIS CORRECT?' : 'Y'
      'PRESS \<ENTER\> TO EXIT THE INSTALLER' : ''
    timeout: 90
  tags: install

- name: add sm.ini
  copy:
    src: sm.ini
    dest: "{{ sm_install_server_dir }}/RUN"
    owner: "{{ install_user }}"
    mode: 0755

# work only on redhat images
#- name: install openjdk per internal script
#  command: "{{ sm_install_server_dir }}/installOpenJDK.sh -i4sm"
#  tags: prepare
#  become: yes

# - name: link jre in sm installation
#   command: "{{ sm_install_server_dir }}/RUN/setupLinks.sh jre"
#   environment:
#     JAVA_HOME: "{{ java_home }}"
#   tags: install

# - name: link jre in sm directory manually
#   command: "ln -s {{ java_home }} {{ sm_install_server_dir }}/RUN/jre"
