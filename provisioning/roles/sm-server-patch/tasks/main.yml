---

- name: create patches installdir
  file: path={{ sm_patch_path }} state=directory mode=0755 owner={{ install_user }}
  tags: patch
  become: yes

#- name: copy itsm patch and unarchive it
#  unarchive: src={{ patch_file }} dest={{ patch_path }} mode=0755 owner={{ install_user }}
#  tags: patch
#  become: yes

- name: copy ITSM Patch from S3
  aws_s3:
    bucket: "{{ s3_bucket }}"
    object: "{{ s3_patch_path }}/{{ sm_patch_file }}"
    # version: 48c9ee5131af7a716edc22df9772aa6f
    dest: "{{ sm_patch_path }}/{{ sm_patch_file }}"
    mode: get

- name: unarchive patch
  unarchive:
    src: "{{ sm_patch_path }}/{{ sm_patch_file }}"
    dest: "{{ sm_patch_path }}"
    mode: 0755
    owner: "{{ install_user }}"
    remote_src: "{{ remote_src }}"
  tags: patch
  become: yes

- name: unarchive patchfile
  unarchive:
    src: "{{ sm_patch_path }}/{{ sm_patch_patch }}"
    dest: "{{ sm_patch_path }}"
    mode: 0755
    owner: "{{ install_user }}"
    remote_src: yes
  tags: patch
  become: yes

- name: create patches backupdir
  file: path={{ sm_patch_backup }} state=directory mode=0755 owner={{ install_user }}
  tags: patch
  become: yes

- name: create logdir
  file: path="{{ sm_install_server_dir }}/logs" state=directory mode=0755 owner={{ install_user }}
  tags: patch

- name: install itsm patch
  expect:
    command: "{{ sm_patch_path }}/{{ sm_patch_cmd }}"
    chdir: "{{ sm_install_server_dir }}"
    responses:
      'SM Server installation directory' : "{{ sm_install_server_dir }}"
      'SM Server backup directory' : "{{ sm_patch_backup }}"
      'ENTER AN ABSOLUTE PATH, OR PRESS \<ENTER\> TO ACCEPT THE DEFAULT' : "{{ sm_install_server_dir }}"
      'IS THIS CORRECT?' : 'Y'
      'PRESS \<ENTER\> TO EXIT THE INSTALLER' : ''
  tags: patch
