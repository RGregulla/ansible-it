---

- name: load secrets into playbook
  include_vars: secrets.yml
  when: production_mode

- name: copy truststore from S3
  aws_s3:
    bucket: "{{ s3_bucket }}"
    object: "{{ s3_cert_path }}/smtrust"
    dest: "{{ sm_install_server_dir }}/RUN/smtrust"
    mode: get
  when: production_mode
  become: false

- name: add sm.ini
  template:
    src: sm.ini.j2
    dest: "{{ sm_install_server_dir }}/RUN/sm.ini"
    owner: "{{ install_user }}"
    force: yes
    mode: 0755

- name: add sm.cfg
  copy:
    src: sm.cfg
    dest: "{{ sm_install_server_dir }}/RUN/sm.cfg"
    owner: "{{ install_user }}"
    force: yes
    mode: 0755

- name: create temporary license
  shell: "{{ sm_install_server_dir }}/RUN/sm -instanton"
  args:
    executable: /bin/bash
    chdir: "{{ sm_install_server_dir }}/RUN"
  tags: license

- name: unlock database
  shell: "{{ sm_install_server_dir }}/RUN/sm -unlockdatabase"
  args:
    executable: /bin/bash
    chdir: "{{ sm_install_server_dir }}/RUN"
  tags: unlock_database

- name: add smserver.service
  template:
    src: smserver.service.j2
    dest: "{{ sm_service_path }}/{{ sm_service_file }}"
    mode: 0755
  become: true

- name: install smserver as service
  shell: systemctl daemon-reload
  become: true

- name: enable smservice service
  shell: systemctl enable smserver.service
  become: true
  notify: restart smserver

# - name: start sm
#   shell: "{{ sm_install_server_dir }}/RUN/smstart"
#   args:
#     executable: /bin/bash
#     chdir: "{{ sm_install_server_dir }}/RUN"
#   tags: start_sm
