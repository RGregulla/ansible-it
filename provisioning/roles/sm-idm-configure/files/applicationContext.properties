# Applies to REST invocation of both CSA and Keystone. If set to true, requires standard Java certificate validation
# and hostname verification to pass; if false, ignores certificate validation and hostname verification to simplify
# less rigorous deployments.
idm.ssl.requireValidCertificate = false

# Properties of CSA server that manages organization LDAP configurations
idm.csa.enabled = false
idm.csa.protocol = https
idm.csa.hostname = localhost
idm.csa.port = 8444
idm.csa.username = csaTransportUser
idm.csa.password = ENC(REtzeMhhAKGpZi7pFkdN8G89E2XcY6z8dmY5n5RodOw=)
idm.csa.base = /consumption
idm.encryptedSigningKey=ENC(dzFE1yZw8E7x8xHklRqnHg==)

# Properties for CSA Auditing Server
idm.csa.audit.enabled = false
idm.csa.audit.retries = 3
idm.csa.audit.bufferSize = 5000
idm.csa.audit.blocking = false
idm.csa.audit.protocol = https
idm.csa.audit.hostname = localhost
idm.csa.audit.port = 8444
idm.csa.audit.servicePath = /csa/rest/audit/
idm.csa.audit.username = csaTransportUser
idm.csa.audit.password = ENC(REtzeMhhAKGpZi7pFkdN8G89E2XcY6z8dmY5n5RodOw=)
# Passing the username in Http header of IDM REST API and let IDM invoke the CSA Audit API with the provided username
idm.csa.audit.passUserName = PASSING_USER_NAME
idm.csa.audit.enablePassUserName = true

# Properties for LDAP configuration
# LDAP connect and read timeouts are given in milliseconds (0 indicates no timeout)
idm.ldap.readTimeout = 60000
idm.ldap.connectTimeout = 60000
idm.ldap.ssl.verifyHostname = false
idm.ldap.extended_attributes=telephoneNumber,sn,givenName,employeeNumber,location

# Flag that indicates whether Keystone is enabled. If set to true, enables secondary authentication through Keystone;
# if set to false, disables secondary authentication through Keystone
idm.keystone.enabled = false
# Flag that indicates whether secondary authentication is required. If set to true, requires secondary (Keystone)
# authentication to succeed in order for authentication to succeed. If set to false. authentication succeeds if primary
# (generally LDAP or Active Directory) authentication succeeds, regardless of whether secondary (Keystone)
# authentication succeeds.
idm.keystone.required = false

# Properties of Keystone server that manages Keystone configuration. If there is no Keystone configuration, these
# properties should not be commented out--they will be ignored.
idm.keystone.protocol = http
idm.keystone.hostname = keystone
idm.keystone.port = 5000
idm.keystone.servicePath = v3
idm.keystone.domainName = Default
idm.keystone.transportUsername = consumer
idm.keystone.transportPassword = encrypted
idm.keystone.transportProject = CSA_CONSUMER

# Properties for properly configuring the database access. Each line has the following format:
#
#      hibernate.property_name=property_value

# Database connection settings
#####Database Common Configuration
# JDBC connection pool (use the built-in)
idm.persistence.connection.pool_size = 10
# The oracle thin driver cannot batch clobs or anything > 4000 characters.
# http://forum.hibernate.org/viewtopic.php?t=93527&highlight=multiple
# http://www.hibernate.org/56.html
idm.persistence.jdbc.batch_size = 0
# Disable the second-level cache
idm.persistence.cache.provider_class = org.hibernate.cache.internal.StandardQueryCache
# Echo all executed SQL to stdout
idm.persistence.show_sql = false
# Drop and re-create the database schema on startup if set to 'create'
# Leaves the database schema intact if set to 'validate'
##for SQLServer, it should set to idm.persistence.hbm2ddl.auto=false. Otherwise use idm.persistence.dialect=sqlserver.db.specific.IdmSQLServer2012Dialect instead of hibernate Dialect
idm.persistence.hbm2ddl.auto = validate

# DB connection pool settings
idm.persistence.connection.initialPoolSize = 10
idm.persistence.connection.maxPoolTotal = 100

###PostgresSQL
idm.persistence.flyway.type = postgresql
# SQL dialect Change to commented out version for Hibernate 4.3.4.Final
# hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
idm.persistence.dialect = org.hibernate.dialect.PostgreSQL9Dialect
idm.persistence.connection.driver.class = org.postgresql.Driver
# Update this url to have your correct information
#idm.persistence.connection.url = jdbc:postgresql://{{ idm_db_server }}:5432/idmdb
idm.persistence.connection.url = jdbc:postgresql://{{ sm_server_dbhost }}:5432/{{ idm_db_name }}
# Database connection user settings
idm.persistence.connection.username = {{ idm_db_user }}
idm.persistence.connection.password = {{ idm_db_password }}


###SQLSERVER
#idm.persistence.flyway.type=sqlserver
#idm.persistence.dialect=sqlserver.db.specific.IdmSQLServer2012Dialect
#idm.persistence.connection.driver.class=com.microsoft.sqlserver.jdbc.SQLServerDriver
#idm.persistence.connection.url=jdbc:sqlserver://localhost\\<InstanceName>:1433;DatabaseName=idmdb
#idm.persistence.connection.username=sa
#idm.persistence.connection.password=<password>

####MySQL
#idm.persistence.flyway.type=mysql
#idm.persistence.dialect=org.hibernate.dialect.MySQL5Dialect
#idm.persistence.connection.driver.class=com.mysql.jdbc.Driver
#idm.persistence.connection.url=jdbc:mysql://localhost/idmdb
#idm.persistence.connection.username=root
#idm.persistence.connection.password=<password>

####Oracle
#idm.persistence.flyway.type=oracle
#idm.persistence.dialect=org.hibernate.dialect.Oracle10gDialect
#idm.persistence.connection.driver.class=oracle.jdbc.OracleDriver
#idm.persistence.connection.url=jdbc:oracle:thin:@localhost:1521:idmdb
#idm.persistence.connection.username=<userName>
#idm.persistence.connection.password=<password>

# Name of the default organization to use with CAC if no organization is defined
# in the request.
#idm.cac.default_tenant_org=CONSUMER
# Name of the X.509 certificate field from which the user name will be extracted.
# Possible values are:
#   - subjectDN
#   - san
#   - subjectDN,san (or san,subjectDN)
# When the third comma separated value is used,
# If this property is not set, then the default value is subjectDN.
#idm.cac.x509Attribute=subjectDN

# The regular expression used to extract a user name from the field defined by the idm.cac.x509Attribute property.
# If this property is not set, then the default value is: CN=(.*?),
#idm.cac.regex=CN=(.*?),

# Type of the subject alternative name.
# Possible values are:
#   - OtherName
#   - RFC822Name
# If this property is not set, then the default value is OtherName
# Any other value is treated as an error.
#idm.cac.san.type=OtherName

#IWA configuration properties
#ID of the ldap server configuration IWA will use for secondary authentication
idm.iwa.auth_config_id = 90ceff1650f25b200150f26622da0004
#name of the tenant which contains the ldap server configuration
idm.iwa.auth_config_tenant = CONSUMER
#name of the ldap attribute to be used to determine the tenant
idm.iwa.auth_tenant_attribute = company
#IdM service provider user name
idm.iwa.service_provider=HTTP/my.server@MY.REALM.COM
#keytab file location
idm.iwa.keytab_location=file\:C\:/idm-iwa-propel1.keytab
#IWA Kerberos Authentication Provider debugging
idm.iwa.debug=true
#Extended attribute names
idm.iwa.extendedAttributes=telephoneNumber,sn,givenName,employeeNumber
#Overrides the UPN when searching for a user's details
#only enable when you wish to override the search attribute for IWA
#idm.iwa.userSearchAttribute=userPrincipalName
#Only enable when you wish to try alternate domains when looking up user details
#idm.iwa.fallbackDomainSuffixes=blue.com|red.com
#Enables the defaulting of organization if one is not found from a user attribute
#idm.iwa.auth_default_tenant attribute cannot be null if enabled is true
idm.iwa.auth_enable_default_org=false
#The default organization which users will become a member of is organization cannot be found from user attributes.
#requires idm.iwa.auth_enable_default_org=true
idm.iwa.auth_default_tenant=CONSUMER

#Header which contains the value to become the IdM username
idm.sso.username_header=givenname
#header which contains the ldap group memberships of the user
idm.sso.group_membership_header=memberOf
#This is a regex value delimiter and requires proper escaping of special characters
#used to delimit multiple values in the group membership header
idm.sso.group_membership_delimiter=\\|
#required to be true in order to default the organization
idm.sso.enable_default_org=true
#organization which sso user will become a member of
idm.sso.default_tenant_org=CONSUMER

# Keystore configuration for SAML and WS-Trust
#idm.saml.keystore.provider=JsafeJCE
idm.saml.keystore.type=jks
idm.saml.keystore=classpath:security/samlKeystore.jks
idm.saml.keystore.password=changeit
idm.saml.keystore.defaultKey.name=itsmsaml
idm.saml.keystore.defaultKey.password=changeit

#Lock
#Timeout in minutes
idm.lock.default_time_out=120

#Number of threads to execute roster loading with
#Default is 4 threads when not specified
idm.loader.roster_thread_count=4
#Specifies the minimum amount of time before a result will be processed again
#Prevents multiple nodes in a cluster from continually executing the same work
#Specified in minutes, default 30
idm.loader.minimum_result_cache=30
#Hard timeout where loader instance is terminated
#in HOURS, default 24, should allow ~ 400k entries to be processed before timeout with 4 threads
idm.loader.roster_loader_hard_timeout=24

# SCIM Configuration
idm.scim.cache-control.max-age = 1200
idm.scim.bulk.max.operations = 10000
idm.scim.bulk.max.payload = 10485760

# Token cache-control Configuration
idm.token.cache-control.max-age = 1200
idm.user.key.to_upper_case=false

##Indicate if IdM will pull the members when creating one LDAP/LdapOu Group representation
idm.pull_members_when_add_group=true
##Indicate if IdM will recalculate the membership relation between logon user and groups
idm.update_group_when_login=true
idm.ldap.count_limit=1000

# RSA secureId Configuration path that stores custom properties files
idm.secureId.configLocation=c:

#idm cookie related configuration for ADM
#idm.token.cookie.key=access_token
#idm.token.cookie.secure=true
#idm.token.cookie.httpOnly=true
#idm.token.cookie.domain=.hpe.com

## define nested level when search group for user in LDAP
#  0, G4,               no nesting
#  1, G4, G3,           return one level of nesting
#  2, G4, G3, G2,       return two levels of nesting
#  3, G4, G3, G2, G1,   return three levels of nesting
idm.ldap.nested_group_level=0
