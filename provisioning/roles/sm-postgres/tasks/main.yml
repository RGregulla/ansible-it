---

- name: install Postgres DB for Service Manger
  yum:
    name:
       - postgresql
       - postgresql-server
       - postgresql-contrib
       - python-psycopg2
       - openldap.i686
       - krb5-libs.i686
    state: present
  tags: install
  become: yes

- name: initialize postgres
  command: postgresql-setup initdb
  become: true
  become_user: "{{postgres_user}}"

- name: change connection rule in config
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    #regexp: '^# \"local\" is for Unix domain socket connections only'
    state: present
    insertafter: '# \"local\" is for Unix domain socket connections only'
    line: 'local   all             smuser                                  trust'
  become: true
  become_user: "{{postgres_user}}"

- name: change 2nd connection rule in config
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    #regexp: '^# IPv4 local connections:'
    state: present
    insertafter: '# IPv4 local connections:'
    line: 'host    all             smuser          127.0.0.1/32            trust'
  become: true
  become_user: "{{postgres_user}}"

- name: Start PostgreSQL and enable at boot
  service: name=postgresql
           enabled=yes
           state=started
  become: true

- name: ensure database is created
  postgresql_db: name="{{dbname}}"
  become: true
  become_user: "{{postgres_user}}"

- name: ensure user has access to database
  postgresql_user: db="{{dbname}}" name="{{dbuser}}" password="{{dbpassword}}" priv=ALL
  become: true
  become_user: "{{postgres_user}}"

- name: ensure user does not have unnecessary privilege
  postgresql_user: name="{{dbuser}}" role_attr_flags=NOSUPERUSER,NOCREATEDB
  become: true
  become_user: "{{postgres_user}}"

- name: ensure no other user can access the database
  postgresql_privs: db="{{dbname}}" role=PUBLIC type=database priv=ALL state=absent
  become: true
  become_user: "{{postgres_user}}"

- name: create sm schema
  postgresql_schema:
    name: "{{ dbschema }}"
  become: true
  become_user: "{{postgres_user}}"
  #notify: restart postgresql
